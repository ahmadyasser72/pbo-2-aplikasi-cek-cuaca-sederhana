
import com.squareup.moshi.JsonAdapter;
import com.squareup.moshi.Moshi;
import com.squareup.moshi.Types;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import okhttp3.HttpUrl;
import okhttp3.OkHttpClient;
import okhttp3.Request;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author x
 */
public class JFrameAplikasiCekCuacaSederhana extends javax.swing.JFrame {

    private OkHttpClient client;
    private String apiKey = "07df57ec686790b155da3f0b59a7c39a";

    private Moshi moshi = new Moshi.Builder().build();
    private JsonAdapter<CurrentAPI> currentAPI = moshi.adapter(CurrentAPI.class);
    private JsonAdapter<List<GeocodingAPI>> geocodingAPI = moshi.adapter(
            Types.newParameterizedType(List.class, GeocodingAPI.class)
    );

    /**
     * Creates new form JFrameAplikasiCekCuacaSederhana
     */
    public JFrameAplikasiCekCuacaSederhana() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.client = new OkHttpClient();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabelIconCuaca = new javax.swing.JLabel();
        jLabelNamaCuaca = new javax.swing.JLabel();
        jLabelKeteranganCuaca = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nama kota");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(jLabel1, gridBagConstraints);

        jButton1.setText("Cek Cuaca");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jButton1, gridBagConstraints);

        jComboBox1.setEditable(true);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Banjarbaru", "Banjarmasin", "Kotabaru" }));
        jComboBox1.setSelectedIndex(-1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(jComboBox1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "data cuaca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelIconCuaca.setBackground(new java.awt.Color(135, 206, 235));
        jLabelIconCuaca.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabelIconCuaca.setForeground(new java.awt.Color(255, 255, 255));
        jLabelIconCuaca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconCuaca.setText("icon");
        jLabelIconCuaca.setOpaque(true);
        jLabelIconCuaca.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 8);
        jPanel2.add(jLabelIconCuaca, gridBagConstraints);

        jLabelNamaCuaca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelNamaCuaca.setText("nama...");
        jLabelNamaCuaca.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelNamaCuaca.setPreferredSize(new java.awt.Dimension(120, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 4);
        jPanel2.add(jLabelNamaCuaca, gridBagConstraints);

        jLabelKeteranganCuaca.setText("keterangan...");
        jLabelKeteranganCuaca.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelKeteranganCuaca.setPreferredSize(new java.awt.Dimension(120, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 4, 4);
        jPanel2.add(jLabelKeteranganCuaca, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        var utils = new Utilities(this);
        if (utils.validasiTidakNull(jComboBox1, "nama kota")) {
            return;
        }

        var kota = (String) jComboBox1.getSelectedItem();
        var coordinates = this.getCoordinates(kota);
        if (coordinates.isEmpty()) {
            utils.showErrorDialog("gagal mendapatkan kordinat kota '%s'!".formatted(kota));
            return;
        }

        var data = this.getWeatherData(coordinates.get());
        if (data.isEmpty()) {
            utils.showErrorDialog("gagal mendapatkan data cuaca '%s'".formatted(kota));
            return;
        }

        jLabelNamaCuaca.setText(data.get().main);
        jLabelKeteranganCuaca.setText(data.get().description);

        var icon = this.getWeatherIcon(data.get());
        jLabelIconCuaca.setText("");
        jLabelIconCuaca.setIcon(icon);
    }//GEN-LAST:event_jButton1ActionPerformed

    private ImageIcon getWeatherIcon(WeatherData data) {
        var url = new HttpUrl.Builder()
                .scheme("https")
                .host("openweathermap.org")
                .addPathSegments("img/wn/%s.png".formatted(data.icon))
                .build();

        var request = new Request.Builder().url(url).build();
        try (var response = this.client.newCall(request).execute()) {
            if (!response.isSuccessful()) {
                throw new IOException("Unexpected code " + response);
            }

            var image = ImageIO.read(response.body().byteStream());
            return new ImageIcon(image);
        } catch (IOException ex) {
            Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(Level.SEVERE, null, ex);
        }

        return null;
    }

    private Optional<WeatherData> getWeatherData(GeocodingAPI coordinates) {
        var url = new HttpUrl.Builder()
                .scheme("https")
                .host("api.openweathermap.org")
                .addPathSegments("data/2.5/weather")
                .addQueryParameter("lat", coordinates.lat)
                .addQueryParameter("lon", coordinates.lon)
                .addQueryParameter("lang", "id")
                .addQueryParameter("appid", this.apiKey)
                .build();

        var request = new Request.Builder().url(url).build();
        try (var response = this.client.newCall(request).execute()) {
            if (!response.isSuccessful()) {
                throw new IOException("Unexpected code " + response);
            }

            var json = response.body().string();
            return Optional.of(
                    this.currentAPI.fromJson(json).weather.getFirst()
            );
        } catch (IOException ex) {
            Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(Level.SEVERE, null, ex);
        }

        return Optional.empty();
    }

    private Optional<GeocodingAPI> getCoordinates(String kota) {
        var url = new HttpUrl.Builder()
                .scheme("https")
                .host("api.openweathermap.org")
                .addPathSegments("geo/1.0/direct")
                .addQueryParameter("q", kota)
                .addQueryParameter("limit", "1")
                .addQueryParameter("appid", this.apiKey)
                .build();

        var request = new Request.Builder().url(url).build();
        try (var response = this.client.newCall(request).execute()) {
            if (!response.isSuccessful()) {
                throw new IOException("Unexpected code " + response);
            }

            var json = response.body().string();
            var geocodingResponse = this.geocodingAPI.fromJson(json);
            return geocodingResponse.isEmpty()
                    ? Optional.empty()
                    : Optional.of(geocodingResponse.getFirst());
        } catch (IOException ex) {
            Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(Level.SEVERE, null, ex);
        }

        return Optional.empty();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameAplikasiCekCuacaSederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameAplikasiCekCuacaSederhana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelIconCuaca;
    private javax.swing.JLabel jLabelKeteranganCuaca;
    private javax.swing.JLabel jLabelNamaCuaca;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}

class GeocodingAPI {

    String lat;
    String lon;
}

class CurrentAPI {

    List<WeatherData> weather;
}

class WeatherData {

    String id;
    String main;
    String description;
    String icon;
}
